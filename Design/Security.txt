Securty System 

User authentication: The system require users to authenticate 
themselves before accessing any sensitive information or performing any critical actions.
Both in client and server have authentication, this means that a user that login in client, will have an client token 
access token and client token
both this 2 token are verify with jwt, which means that we will verify the autencity, than we will authenticate
in server with the passowrd and email of user and generate new tokens
this new token we will sign in, this means used to verify that the sender of the JWT 
is who it says it is and to ensure that the message wasn't changed along the way. 
We also maybe encryped with aes. 

Role-based access control: Different users should have different 
levels of access to the system's resources, depending on their roles and responsibilities.

Password policies: The system enforce strong password policies, 
including minimum length, complexity requirements, and expiration periods. (with amazon cognito)

Secure communications: The system use HTTPS to encrypt all data transmitted between the user's browser and the server.

Input validation: The system validate all user input to prevent SQL injection, cross-site scripting (XSS), and other common attacks.

Error handling: The system handle errors, providing informative error messages without revealing sensitive information.

Session management: The system manage user sessions securely, preventing session hijacking and other attacks.
use cookies but http only, so nobody can use javascript do controll tokens, and all cookies are encryped.
so even if someone saw the data on cookies cant do nothing because are encrypted.

Logging and monitoring: The system log all user activities and system events, 
and provide real-time monitoring and alerts for suspicious activity. (we are thinking about that)

Regular security testing: regular security testing, including vulnerability assessments and penetration testing, 
to identify and mitigate any potential vulnerabilities.

Regular software updates:  updated with the latest security patches and updates to address any known security issues.

Confidentiality: protect sensitive information, such as passwords, personal data, and financial information, from unauthorized access or disclosure.

Encryption: encryption to protect sensitive data both at rest (stored on the server) and in transit (transmitted over the network).

Access controls:  access controls to restrict access to sensitive data to authorized users only.

Auditing and monitoring: track all access and changes to sensitive data, and provide auditing and monitoring capabilities to detect and respond to suspicious activity.

Integrity: ensure the integrity of data by preventing unauthorized modification or tampering.

Availability: ensure that critical resources and data are available to authorized users when needed, while preventing denial-of-service (DoS) attacks and other disruptions.

Backup and recovery: a backup and recovery plan in place to ensure that critical data can be restored in the event of a disaster or other data loss event.

Compliance: relevant legal and regulatory requirements, such as data protection laws and industry standards.

Incident response: an incident response plan in place to quickly detect and respond to security incidents and minimize the impact of any breaches.

Training and awareness: educate users on security best practices and prevent human errors and social engineering attacks.