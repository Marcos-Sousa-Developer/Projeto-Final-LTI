Why Horizontal ?

Horizontal scaling, on the other hand, involves adding more machines to a system to increase its capacity and performance. This approach is also known as scaling out because it involves adding more machines to the existing infrastructure. For example, you might add more web servers to your website to handle more traffic. 

The main difference between vertical scaling and horizontal scaling is that vertical scaling involves adding more resources to a single machine, while horizontal scaling involves adding more machines to a system.

Vertical scaling is typically more expensive than horizontal scaling because it requires more powerful hardware.  

Specifications.

CPU: A CPU with multiple cores and a high clock speed to handle multiple instances of your web server software simultaneously. (1 CPU 1 core,  dual core or quad core intel Xeon E5 or E7 processor); 

RAM: Allocate sufficient RAM to each instance of your web server software. (2GB of ram); 

Storage: Use a scalable storage solution that can handle the increasing storage needs of your web server as you add more instances (10 - 20gb).

Load balancer: a load balancer that can handle a high volume of traffic and can distribute requests evenly across multiple backend instances.

Auto-scaling: Set up auto-scaling policies to add or remove instances based on traffic demand.

Network bandwidth: a high-speed network connection to ensure that your web server can handle a large number of requests and serve content quickly (100 Mbps - 1GB of band switch).
maximum amount of data that can be transmitted over a network connection in a given amount of time. It is typically measured in bits per second (bps) or a multiple thereof, such as megabits per second (Mbps) or gigabits per second (Gbps).
In the context of a web shop app, bandwidth refers to the amount of data being transferred between the server and the user's device. This includes data such as web pages, images, videos, and other media. The more data that is being transferred, the more bandwidth is required to ensure that the transfer is completed quickly and efficiently.

Monitoring and management tools: Monitoring and management tools to keep track of your server's performance, troubleshoot issues, and adjust auto-scaling policies as needed. (cloud trace, Stackdriver, Cloud Monitoring...)

Caching: Able to cache frequently accessed content to reduce the load on the server and improve performance. 

Health Checks: able to perform health checks to ensure that each instance is running properly.

Content Delivery: A content delivery network (CDN) to deliver content more quickly to users by caching content on servers located closer to them. 

Scalable Storage: able to handle large volumes of data and scale storage as the workload grows Google Cloud Storage

Deployment Automation: github actions, ensure that the deployment and management processes are documented and repeatable 
